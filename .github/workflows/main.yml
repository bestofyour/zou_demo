# This is a basic workflow to help you get started with Actions
name: Test

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  IMAGE_NAME: na-example
  DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build -t $IMAGE_NAME .
      
      - name: Log into DockHub
        run: docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}

     - name: Push image to DockHub
        run: |
          IMAGE_ID=$DOCKER_USERNAME/$IMAGE_NAME

          # 转换成小写
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # 从版本中删除 github-ref Or github-sha 前缀
          VERSION=$(echo "${{ github.sha }}" | sed -e 's,.*/\(.*\),\1,')

          # 从标签名称中删除 v 前缀
          # [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "${{ github.ref }}" == "main" ] && VERSION=latest

          # 保留前 7 位
          VERSION=${VERSION:0:7}

          # 打印 IMAGE_ID
          echo IMAGE_ID=$IMAGE_ID
          # 打印 VERSION
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME ${IMAGE_ID}:$VERSION

          docker push $IMAGE_ID:$VERSION
      

  
  
